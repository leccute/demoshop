<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.docmall.mapper.AdOrderMapper">

<sql id="criteria">
		
	<trim prefix="(" suffix=") AND " prefixOverrides="OR">
		<foreach collection="cri.typeArr" item="type">
		  <trim prefix="OR">
		  	<choose>
		  		<when test="cri.type == 'O'.toString()">
		  			odr_code like '%' || #{cri.keyword} || '%'
		  		</when>
		  		<when test="cri.type == 'M'.toString()">
		  			mem_id like '%' || #{cri.keyword} || '%'
		  		</when>
		  	</choose>
		  </trim>
		</foreach>
	</trim>
	
</sql>

<!-- !odr_status.equals('') 얘까지 처리하는 이유는, 검색이 아니라 그냥 일반 리스트에서 페이지 번호를 누르면 값이 공백이기 때문이다. -->
<sql id="odrstatus">
	<if test="odr_status != null and !odr_status.equals('')">
		ODR_STATUS = #{odr_status} AND
	</if>
</sql>

<!-- 날짜로 검색 -->
<sql id="period">
	<if test="startDate != null and !startDate.equals('') and endDate != null and !endDate.equals('')">
		<![CDATA[
			ODR_DATE >= TO_DATE(#{startDate}) And ODR_DATE < TO_DATE(#{endDate}) + 1 AND 
		]]>
	</if>
</sql>

<select id="getOrderList" resultType="com.docmall.domain.OrderVO">
<![CDATA[
SELECT
	RN, odr_code, odr_date, mem_id, odr_name, odr_total_price, odr_status
FROM(
	SELECT /*+ INDEX_DESC(ord PK_ORDER_CODE) */
    	ROWNUM RN, ord.odr_code, ord.odr_date, ord.mem_id, ord.odr_name, ord.odr_total_price, ord.odr_status 
	FROM 
		order_tbl ord 
	WHERE
]]>
	<include refid="odrstatus" />
	<include refid="period" />
	<include refid="criteria" />
<![CDATA[ 
	ROWNUM <= #{cri.pageNum} * #{cri.amount}
	)
WHERE 
	RN > (#{cri.pageNum} - 1) * #{cri.amount}
]]>
</select>

<select id="getOrderTotalCount" resultType="int">
	SELECT COUNT(*) FROM order_tbl WHERE
		<include refid="odrstatus" />
		<include refid="period" />
		<include refid="criteria" />
		ODR_CODE > 0
</select>

<!-- 주문 상태 변경 -->
<update id="orderStatusChange">
UPDATE ORDER_TBL
SET 
	ODR_STATUS = #{odr_status}
WHERE
	ODR_CODE = #{odr_code}
</update>

<!-- 진행 상태 카운트 -->
<select id="orderStatusCount" resultType="int">
SELECT
	COUNT(*)
FROM
 	ORDER_TBL
WHERE
	ODR_STATUS = #{odr_status}
</select>

<!-- 주문 상세 정보 -->
<!-- 아래에서 resultMap을 사용하기 위해 주석 처리함. -->
<select id="getOrderDetailList1" resultType="com.docmall.domain.AdOrderDetailVOList">
SELECT 
	ORD.ODR_CODE, ORD.PDT_NUM, P.PDT_NAME, P.PDT_PRICE, ORD.ODR_AMOUNT, ORD.ODR_PRICE, P.PDT_IMG_FOLDER, P.PDT_IMG
FROM 
	ORDER_DETAIL_TBL ORD INNER JOIN PRODUCT_TBL P
ON 
	ORD.PDT_NUM = P.PDT_NUM
WHERE 
	ORD.ODR_CODE = #{odr_code}
</select>

<!-- 결제 정보 -->
<select id="getPaymentVO" resultType="com.docmall.domain.PaymentVO">
SELECT
	PAY_CODE, ODR_CODE, MEM_ID, PAY_METHOD, PAY_DATE, PAY_TOT_PRICE, PAY_NOBANK_PRICE, PAY_REST_PRICE, PAY_NOBANK_USER, PAY_NOBANK, PAY_MEMO
FROM
	PAYMENT_TBL
WHERE 
	ODR_CODE = #{odr_code}
</select>

<!-- 주문 정보 -->
<select id="getOrderVO" resultType="com.docmall.domain.OrderVO">
SELECT
	ODR_CODE, MEM_ID, ODR_NAME, ODR_ZIPCODE, ODR_ADDR, ODR_ADDR_D, ODR_PHONE, ODR_TOTAL_PRICE, ODR_DATE, ODR_STATUS, PAYMENT_STATUS
FROM
	ORDER_TBL
WHERE 
	ODR_CODE = #{odr_code}
</select>

<!-- 관리자 메모 -->
<update id="pay_memo">
UPDATE
	PAYMENT_TBL
SET 
	PAY_MEMO = #{pay_memo}
WHERE
	PAY_CODE = #{pay_code}
</update>

<!-- 주문삭제 -->
<delete id="orderDelete">
DELETE FROM 
	ORDER_TBL
WHERE
	ODR_CODE = #{odr_code}
</delete>
<delete id="orderDetailDelete">
DELETE FROM ORDER_DETAIL_TBL
WHERE 
	ODR_CODE = #{odr_code}
</delete>
<delete id="orderPaymentDelete">
DELETE FROM PAYMENT_TBL
WHERE
	ODR_CODE = #{odr_code}
</delete>

<!-- 주문 상품 개별 삭제 -->
<delete id="orderDetailProductDelete">
DELETE FROM 
	ORDER_DETAIL_TBL
WHERE
	ODR_CODE = #{odr_code}
AND
	PDT_NUM = #{pdt_num}
</delete>

<!-- 주문 상품 개별 삭제 후 주문 금액 업데이트(금액 차감) -->
<update id="orderTotalPriceChange">
UPDATE 
	ORDER_TBL
SET
	ODR_TOTAL_PRICE = ODR_TOTAL_PRICE - #{odr_price}
WHERE
	ODR_CODE = #{odr_code}
</update>

<!-- DB컬럼명과 VO클래스의 필드명이 다를 경우에도, 이 과정을 거쳐줘야 한다.  property:필드명
지금은 필드명과 DB컬럼명이 같은데도 이 작업을 하는 이유는, 쿼리가 조인이었을 때 결과를 받는 방법 2) 기존 VO 클래스를 이용한다. 이걸 위함이다. -->
<resultMap type="com.docmall.domain.OrderDetailVO" id="orderDetailMap">
	<id property="odr_code" column="odr_code"/>
	<id property="pdt_num" column="pdt_num"/>
	<result property="odr_amount" column="odr_amount"/>
	<result property="odr_price" column="odr_price"/> 
</resultMap>

<resultMap type="com.docmall.domain.ProductVO" id="productMap">
	<id property="pdt_num" column="pdt_num"/>
	<result property="cate_code" column="cate_code"/>
	<result property="cate_code_prt" column="cate_code_prt"/>
	<result property="pdt_name" column="pdt_name"/>
	<result property="pdt_price" column="pdt_price"/>
	<result property="pdt_discount" column="pdt_discount"/>
	<result property="pdt_company" column="pdt_company"/>
	<result property="pdt_detail" column="pdt_detail"/>
	<result property="pdt_img_folder" column="pdt_img_folder"/>
	<result property="pdt_img" column="pdt_img"/>
	<result property="pdt_amount" column="pdt_amount"/>
	<result property="pdt_buy" column="pdt_buy"/>
	<result property="pdt_date_sub" column="pdt_date_sub"/>
	<result property="pdt_date_up" column="pdt_date_up"/>
</resultMap>

<resultMap type="com.docmall.domain.OrderDetailProductVO" id="orderDetailProductMap">
	<collection property="orderDetailVO" resultMap="orderDetailMap" />
	<collection property="productVO" resultMap="productMap" />
</resultMap>

<select id="getOrderDetailList2" resultMap="orderDetailProductMap">
SELECT 
	ORD.ODR_CODE, ORD.PDT_NUM, P.PDT_NAME, P.PDT_PRICE, ORD.ODR_AMOUNT, ORD.ODR_PRICE, P.PDT_IMG_FOLDER, P.PDT_IMG
FROM 
	ORDER_DETAIL_TBL ORD INNER JOIN PRODUCT_TBL P
ON 
	ORD.PDT_NUM = P.PDT_NUM
WHERE 
	ORD.ODR_CODE = #{odr_code}
</select>

</mapper>